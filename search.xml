<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Linux基本指令]]></title>
      <url>/2019/02/23/Linux%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="连接云服务器"><a href="#连接云服务器" class="headerlink" title="连接云服务器"></a>连接云服务器</h3><h4 id="ssh密钥认证"><a href="#ssh密钥认证" class="headerlink" title="ssh密钥认证"></a>ssh密钥认证</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.在主机和从机上执行：ssh-keygen</span><br><span class="line">2.在从机上执行:  scp  id_rsa.pub  root@主机地址:~/.ssh/master.pub</span><br><span class="line">(上面这条指令是将从机上的 id_rsa.pub文件拷贝传递给到主机的.ssh文件夹下，并且命名为’master.pub’)</span><br><span class="line">3.在主机中的.ssh文件夹中创建authorized_keys文件： touch authorized_keys`</span><br><span class="line">4.修改文件authorized_keys的权限: chmod 600  authorized_keys` </span><br><span class="line">5.将master.pub放进authorized_keys文件中:  cat master.pub &gt;&gt;  authorized_keys</span><br><span class="line">6.在操作主机的时候，需要主机能够自己免密访问自己就将自己的公钥放在自己的authorized_keys文件中</span><br></pre></td></tr></table></figure>
<h4 id="密码登录"><a href="#密码登录" class="headerlink" title="密码登录"></a>密码登录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​连接服务器：①ssh root@47.95.9.84   ②yes  ③输入密码密码</span><br><span class="line">​退出服务器：logout</span><br></pre></td></tr></table></figure>
<h4 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.安装git-bush(已安装请忽略)</span><br><span class="line">2.打开git-bush</span><br><span class="line">3.在本机系统目录下输入指令: shh-keygen</span><br><span class="line">4.修改生成公钥-秘钥对名</span><br><span class="line">5.进入.ssh文件夹查看生成公钥，并复制</span><br><span class="line">6.密码登录连接服务器</span><br><span class="line">7.将公钥复制到需要做免密登录的服务器中</span><br><span class="line">8.重新连接服务器: ssh  root@ip地址</span><br></pre></td></tr></table></figure>
<h3 id="Linux指令系统"><a href="#Linux指令系统" class="headerlink" title="Linux指令系统"></a>Linux指令系统</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令名称 [命名参数] [命令对象]</span><br></pre></td></tr></table></figure>
<h3 id="文件名颜色的含义"><a href="#文件名颜色的含义" class="headerlink" title="文件名颜色的含义"></a>文件名颜色的含义</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​默认色代表普通文件。</span><br><span class="line">​绿色代表可执行文件。</span><br><span class="line">​红色代表tar包文件。    </span><br><span class="line">​蓝色代表目录文件。  </span><br><span class="line">​水红代表图象文件。</span><br><span class="line">​青色代表链接文件。</span><br><span class="line">​黄色代表设备文件。</span><br></pre></td></tr></table></figure>
<h3 id="日常操作"><a href="#日常操作" class="headerlink" title="日常操作"></a>日常操作</h3><h4 id="1-cd命令-进入指定目录"><a href="#1-cd命令-进入指定目录" class="headerlink" title="1.cd命令(进入指定目录)"></a>1.cd命令(进入指定目录)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​cd 文件目录       		-- 进入指定文件目录(~相对路径 — 绝对路径)</span><br><span class="line">​cd ..       	  		-- 返回上层目录</span><br><span class="line">​cd ~        	  		-- 返回根目录</span><br><span class="line">​cd /        	  		-- 进入系统根目录</span><br></pre></td></tr></table></figure>
<h4 id="2-ls命令-查看文件"><a href="#2-ls命令-查看文件" class="headerlink" title="2.ls命令(查看文件)"></a>2.ls命令(查看文件)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">​ls				-- 显示当前目录所有非隐藏文件</span><br><span class="line">​ls -a				-- 显示当前目录中的所有文件，包含隐藏文件</span><br><span class="line">​ls -l/lh			-- 显示文件及其详细信息</span><br><span class="line">ls -S/t				-- 显示文件并按大小、/时间排序</span><br><span class="line">​ls -R			 	-- 递归显示目录中的文件</span><br></pre></td></tr></table></figure>
<h4 id="3-pwd命令-显示当前目录"><a href="#3-pwd命令-显示当前目录" class="headerlink" title="3.pwd命令(显示当前目录)"></a>3.pwd命令(显示当前目录)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​pwd</span><br></pre></td></tr></table></figure>
<h4 id="4-mkdir命令-创建目录"><a href="#4-mkdir命令-创建目录" class="headerlink" title="4.mkdir命令(创建目录)"></a>4.mkdir命令(创建目录)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​mkdir  目录			-- 创建空目录</span><br><span class="line">​mkdir -m 权限 目录		-- 创建一个带权限的目录</span><br><span class="line">​mkdir -p 目录1/目录2		-- 创建目录1且在目录1下创建目录2</span><br><span class="line">​mkdir -v 目录			-- 创建目录并显示信息</span><br></pre></td></tr></table></figure>
<h4 id="5-touch命令-创建文件"><a href="#5-touch命令-创建文件" class="headerlink" title="5.touch命令(创建文件)"></a>5.touch命令(创建文件)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​touch 文件名			-- 新建文件</span><br></pre></td></tr></table></figure>
<h4 id="6-打开文件"><a href="#6-打开文件" class="headerlink" title="6.打开文件"></a>6.打开文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​vim/vi 文件名			-- 打开文件</span><br></pre></td></tr></table></figure>
<h4 id="7-查看文件内容"><a href="#7-查看文件内容" class="headerlink" title="7.查看文件内容"></a>7.查看文件内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​cat 文件名			-- 查看文件</span><br></pre></td></tr></table></figure>
<h4 id="8-rm命令-删除文件-目录"><a href="#8-rm命令-删除文件-目录" class="headerlink" title="8.rm命令(删除文件/目录)"></a>8.rm命令(删除文件/目录)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​rm 文件名			-- 删除文件</span><br><span class="line">​rm -r 目录			-- 删除目录</span><br><span class="line">​rm -f 文件/目录			-- 强制删除文件/删除目录</span><br></pre></td></tr></table></figure>
<h4 id="9-rmdir命令-删除空目录"><a href="#9-rmdir命令-删除空目录" class="headerlink" title="9.rmdir命令(删除空目录)"></a>9.rmdir命令(删除空目录)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​rmdir 目录名			-- 删除空目录(只能删除空目录)</span><br></pre></td></tr></table></figure>
<h4 id="10-cp命令-拷贝"><a href="#10-cp命令-拷贝" class="headerlink" title="10.cp命令(拷贝)"></a>10.cp命令(拷贝)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​cp 文件1 文件2			-- 将文件1的内容拷贝到文件2，</span><br><span class="line">				   如果文件2不存在会先创建，再将内容拷贝到文件2中</span><br><span class="line">​cp -r 文件/目录1 目录2		-- 将文件/目录1拷贝到目录2中</span><br></pre></td></tr></table></figure>
<h4 id="11-mv命令-移动-不能加’-r’进行目录操作"><a href="#11-mv命令-移动-不能加’-r’进行目录操作" class="headerlink" title="11.mv命令(移动,不能加’-r’进行目录操作)"></a>11.mv命令(移动,不能加’-r’进行目录操作)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​mv 文件1 新目录			-- 将文件移动到新目录</span><br><span class="line">​mv 目录名 新目录			-- 将文件移动到新目录</span><br><span class="line">​mv 文件名1 文件名2		-- 将文件重命名为文件名2</span><br><span class="line">​注意: mv指令不能加-r来操作目录</span><br></pre></td></tr></table></figure>
<h4 id="12-history命令-查看输入过的命令"><a href="#12-history命令-查看输入过的命令" class="headerlink" title="12.history命令(查看输入过的命令)"></a>12.history命令(查看输入过的命令)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">​history</span><br></pre></td></tr></table></figure>
<h4 id="13-软链接-快捷方式-硬链接-了解"><a href="#13-软链接-快捷方式-硬链接-了解" class="headerlink" title="13.软链接(快捷方式)/硬链接(了解)"></a>13.软链接(快捷方式)/硬链接(了解)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">​ln -s 路径			-- 保存路径，通过软链接可以进入文件或目录，</span><br><span class="line">				   删除软链接并不影响源文件，删除源文件，软链接将无效</span><br><span class="line">​ln				-- 生产一个文件或目录与原文件或目录进行关联，</span><br><span class="line">				   删除硬链接的时候原文件或目录不会被删除，</span><br><span class="line">				   删除源文件硬链接还会存在，但会变为普通文件</span><br></pre></td></tr></table></figure>
<h4 id="14-文件操作快捷方式"><a href="#14-文件操作快捷方式" class="headerlink" title="14.文件操作快捷方式"></a>14.文件操作快捷方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+Insert			-- 复制命令</span><br><span class="line">Shift+Insert			-- 粘贴命令</span><br><span class="line">​Ctrl + a			-- 回到行首</span><br><span class="line">Ctrl + e			-- 回到行尾</span><br><span class="line">Ctrl + w			-- 向左删除一个单词</span><br><span class="line">Ctrl + u			-- 向左删除全部</span><br><span class="line">Ctrl + v			-- 向右删除全部</span><br><span class="line">Ctrl + y			-- 粘贴上次删除的内容</span><br><span class="line">Ctrl + l			-- 清屏</span><br></pre></td></tr></table></figure>
<h3 id="进程相关指令-用得较少"><a href="#进程相关指令-用得较少" class="headerlink" title="进程相关指令(用得较少)"></a>进程相关指令(用得较少)</h3><h4 id="1-ps指令-查看进程状态"><a href="#1-ps指令-查看进程状态" class="headerlink" title="1.ps指令(查看进程状态)"></a>1.ps指令(查看进程状态)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​ps				-- 进程状态</span><br><span class="line">​ps -aux  或者  ps ex		-- 查看进程</span><br><span class="line">​ps -aux|grep 进程名		-- 查看指定进程</span><br><span class="line">​ps grep  进程ID</span><br></pre></td></tr></table></figure>
<h4 id="2-top-能实时监测当前系统里所有进程的状态"><a href="#2-top-能实时监测当前系统里所有进程的状态" class="headerlink" title="2.top(能实时监测当前系统里所有进程的状态)"></a>2.top(能实时监测当前系统里所有进程的状态)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​top				-- 动态监控进程</span><br><span class="line">​top  -p PID1,PID2,….		-- 动态监控指定进程</span><br></pre></td></tr></table></figure>
<p>​    </p>
<h4 id="3-free-释放"><a href="#3-free-释放" class="headerlink" title="3.free(释放)"></a>3.free(释放)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​free -单位			-- 以指定单位查看内存, </span><br><span class="line">				   例如: free -m (以Mb为单位显示内存状况), -g,  -k等！</span><br></pre></td></tr></table></figure>
<h4 id="4-kill-关闭进程"><a href="#4-kill-关闭进程" class="headerlink" title="4.kill(关闭进程)"></a>4.kill(关闭进程)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">​kill 进程号			-- 杀死指定的进程</span><br><span class="line">​kill -1/-9/-15			-- -1(HUP)不间断重启，-9(KILL)强制杀死进程,-15(TERM)正常终止进程</span><br><span class="line">​pkill  进程名			-- 按名字处理进程</span><br><span class="line">​killall 进程名			-- 处理名字匹配的进程</span><br><span class="line">​uptime				-- 查看系统状态</span><br></pre></td></tr></table></figure>
<h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><h4 id="1-user和group"><a href="#1-user和group" class="headerlink" title="1.user和group"></a>1.user和group</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​一个系统可以有多个用户和多个分组； 一个分组中可以有多个用户，一个用户在不同的分组中(多对多)</span><br><span class="line">​users				-- 查看当前用户</span><br><span class="line">​groups 				-- 查看当前分组</span><br><span class="line">​groupadd  分组名			-- 添加分组</span><br><span class="line">useradd ‐G 分组列表 ‐m ‐s /bin/bash 用户名 -- 创建用户添加到指定的分组(在home创建相应的文件夹)</span><br><span class="line">usermod -G 分组列表 用户名	-- 修改分组</span><br><span class="line">passwd 用户名			-- 修改密码</span><br><span class="line">su  用户名			-- 切换用户身份</span><br><span class="line">sudo				-- 以管理员执行其他程序</span><br><span class="line">注意： a.在ubuntu需要将用户添加到sudo分组中，才能使用sudo以管理员的身份执行程序</span><br><span class="line">​      b.在centOS中需要先执行vi 指令进入sudoers文件中在指定的位置添加内容</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 指令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vim编辑器之神]]></title>
      <url>/2019/02/21/vim%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E7%A5%9E/</url>
      <content type="html"><![CDATA[<h1 id="vim编辑器之神"><a href="#vim编辑器之神" class="headerlink" title="vim编辑器之神"></a>vim编辑器之神</h1><h3 id="配置vimrc配置"><a href="#配置vimrc配置" class="headerlink" title="配置vimrc配置"></a>配置vimrc配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在shell中可以通过 `vim ~/.vimrc` 或者 `vim /etc/vimrc` 打开vimrc文件对vim进行配置。</span><br><span class="line">在这个文件中可以进行很多和vim相关的配置，常用的如下（如果对其他配置感兴趣的可以自己百度）：</span><br><span class="line">![](./img/vim1.png)</span><br></pre></td></tr></table></figure>
<h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><h4 id="1-模式切换"><a href="#1-模式切换" class="headerlink" title="1.模式切换"></a>1.模式切换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">我们可以将vim分为命令模式、编辑模式和末行模式三种  </span><br><span class="line">命令模式				-- 进入vim的时候vim是处于命令模式状态下的，</span><br><span class="line">				   这个时候输入内容不会出现在编辑区(最末什么都没有)</span><br><span class="line">末行模式				-- 在命令模式下输入冒号，让vim进入末行模式。</span><br><span class="line">				   在末行模式的冒号后面可以输入相关指令进行操作(最后有一个冒号)</span><br><span class="line">编辑模式				-- 在命令模式下按&apos;i&apos;进入编辑模式。</span><br><span class="line">				   在编辑模式下可以对文件内容进行编辑</span><br></pre></td></tr></table></figure>
<p>####2.保存和退出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在末行模式下输入相应的指令可以对编辑区的内容进行保存和退出vim界面  </span><br><span class="line">w				-- 只保存(类似快捷键ctr+s)     </span><br><span class="line">q				-- 退出（在编辑区的内容全部都保存的情况下才有效）   </span><br><span class="line">wq				-- 保存并退出  </span><br><span class="line">q!				-- 强制退出（不保存修改信息）</span><br></pre></td></tr></table></figure></p>
<p>####3.光标操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">以下光标操作都是在命令模式下输入的  </span><br><span class="line">^(shift+6)			-- 移动到行首  </span><br><span class="line">$(shift+4)			-- 移动到行尾  </span><br><span class="line">G(shift+g)			-- 移动到文件末尾</span><br><span class="line">行号G				-- 移动到指定行,例如:30G, 让光标直接跳转到行号是30的那一行</span><br><span class="line">gg				-- 移动到文件开头</span><br></pre></td></tr></table></figure></p>
<p>####4.文本操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">以下操作不带冒号的是在命令模式下输入，前面有冒号代码后面的内容是在末行模式下输入  </span><br><span class="line">dd				-- 删除光标所在的行    </span><br><span class="line">数字dd				-- 从光标所在行开始往后面开始删，删除指定数量行内容    </span><br><span class="line">:%d				-- 删除所有     </span><br><span class="line">yy				-- 复制光标所在的行  </span><br><span class="line">数字yy				-- 从光标所在行开始复制指定行数的内容   </span><br><span class="line">p				-- 将复制的内容粘贴到光标所在的位置  </span><br><span class="line">u				-- 撤销      </span><br><span class="line">ctr+r				-- 反撤销    </span><br><span class="line">:%!sort				-- 对内容排序  </span><br><span class="line">:/查找对象[/gice]		-- 搜索匹配正则表达式的内容，</span><br><span class="line">				   按回车回到命令模式后按n往前查找，按N往后查找  </span><br><span class="line">:1,$s/被替换对象/替换内容[/gice*]	-- 将正则表达式匹配到的内容替换成指定内容   </span><br><span class="line">				-- g: 全局匹配  </span><br><span class="line">				-- i: 忽略大小写 </span><br><span class="line">				-- c: 替换时需要提示  </span><br><span class="line">				-- e: 忽略错误</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 编辑器 </category>
            
            <category> vim </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx服务器安装]]></title>
      <url>/2019/02/21/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="Nginx服务器"><a href="#Nginx服务器" class="headerlink" title="Nginx服务器"></a>Nginx服务器</h2><h3 id="阿里云添加80端口"><a href="#阿里云添加80端口" class="headerlink" title="阿里云添加80端口"></a>阿里云添加80端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">阿里云上默认只有一个22端口用来做远程登录，</span><br><span class="line">如果希望在阿里云上安装支持http请求的nginx服务器，需要给阿里云添加80端口</span><br><span class="line">![打开安全组设置](./img/aliyun0.png)  </span><br><span class="line">![](./img/aliyun2.png)</span><br><span class="line">![](./img/aliyun3.png)</span><br><span class="line">![](./img/aliyun4.png)</span><br></pre></td></tr></table></figure>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><h5 id="添加nginx存储库"><a href="#添加nginx存储库" class="headerlink" title="添加nginx存储库"></a>添加nginx存储库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure>
<h5 id="安装nginx-1"><a href="#安装nginx-1" class="headerlink" title="安装nginx"></a>安装nginx</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br></pre></td></tr></table></figure>
<h5 id="运行nginx"><a href="#运行nginx" class="headerlink" title="运行nginx"></a>运行nginx</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Nginx不会自行启动。要运行Nginx  </span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure>
<h5 id="nginx的运行命令"><a href="#nginx的运行命令" class="headerlink" title="nginx的运行命令"></a>nginx的运行命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl status nginx 查看nginx的状态  </span><br><span class="line">systemctl start/stop/enable/disable nginx 启动/关闭/设置开机启动/禁止开机启动</span><br></pre></td></tr></table></figure>
<h5 id="系统启动时启动Nginx"><a href="#系统启动时启动Nginx" class="headerlink" title="系统启动时启动Nginx"></a>系统启动时启动Nginx</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure>
<h5 id="如果您正在运行防火墙，请运行以下命令以允许HTTP和HTTPS通信："><a href="#如果您正在运行防火墙，请运行以下命令以允许HTTP和HTTPS通信：" class="headerlink" title="如果您正在运行防火墙，请运行以下命令以允许HTTP和HTTPS通信："></a>如果您正在运行防火墙，请运行以下命令以允许HTTP和HTTPS通信：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=http </span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<h3 id="nginx目录共享配置"><a href="#nginx目录共享配置" class="headerlink" title="nginx目录共享配置"></a>nginx目录共享配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a) 在contOS目录中确定一个需要共享的文件夹，例如： /home/yuting  </span><br><span class="line">b) 打开 etc/nginx/nginx.conf 文件，设置server</span><br><span class="line">  #共享设置 - 在浏览器中输入服务器ip地址，会展示共享目录的文件列表</span><br><span class="line">  location / &#123;</span><br><span class="line">    root /home/lhy;</span><br><span class="line">    autoindex on;</span><br><span class="line">    autoindex_exact_size on;</span><br><span class="line">    autoindex_localtime on;</span><br><span class="line">  &#125;  </span><br><span class="line">除了可以共享文件，还可以自定义页面</span><br><span class="line">  #自定义服务器页面</span><br><span class="line">  location / &#123;</span><br><span class="line">    root /home/yuting;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">  &#125;</span><br><span class="line">注意： 如果出现权限问题，可以修改目录的权限</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 服务器 </category>
            
            <category> Nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> 配置 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL配置指令]]></title>
      <url>/2019/02/21/MySQL%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><h4 id="下载MySQL源安装包"><a href="#下载MySQL源安装包" class="headerlink" title="下载MySQL源安装包"></a>下载MySQL源安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</span><br></pre></td></tr></table></figure>
<h4 id="安装MySQL源"><a href="#安装MySQL源" class="headerlink" title="安装MySQL源"></a>安装MySQL源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall mysql57-community-release-el7-8.noarch.rpm</span><br></pre></td></tr></table></figure>
<h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure>
<h4 id="设置开启启动MySQL服务"><a href="#设置开启启动MySQL服务" class="headerlink" title="设置开启启动MySQL服务"></a>设置开启启动MySQL服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld</span><br></pre></td></tr></table></figure>
<h4 id="启动-重启MySQL服务"><a href="#启动-重启MySQL服务" class="headerlink" title="启动/重启MySQL服务"></a>启动/重启MySQL服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure>
<h4 id="查看MySQL初始密码"><a href="#查看MySQL初始密码" class="headerlink" title="查看MySQL初始密码"></a>查看MySQL初始密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &apos;A temporary password&apos; /var/log/mysqld.log</span><br></pre></td></tr></table></figure>
<h4 id="更改MySQL密码"><a href="#更改MySQL密码" class="headerlink" title="更改MySQL密码"></a>更改MySQL密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p&apos;旧密码&apos; password &apos;新密码&apos;  </span><br><span class="line">这里更改密码出了问题，更改失败，这是因为密码太过简单的原因。有两个接解决方法：</span><br><span class="line">	方法一：把密码设置复杂点（这是最直接的方法）</span><br><span class="line">	方法二：关闭mysql密码强度验证(validate_password)</span><br><span class="line">编辑配置文件：vim /etc/my.cnf， 增加这么一行validate_password=off</span><br><span class="line">编辑后重启mysql服务：systemctl restart mysqld</span><br></pre></td></tr></table></figure>
<p>　　　　　　　  </p>
<h4 id="设置mysql能够远程访问"><a href="#设置mysql能够远程访问" class="headerlink" title="设置mysql能够远程访问"></a>设置mysql能够远程访问</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a. 登录进MySQL: mysql -uroot -p密码</span><br><span class="line">b. 增加一个用户给予访问权限: grant all privileges on *.* to &apos;root&apos;@&apos;%%&apos; identified </span><br><span class="line">			   by &apos;密码&apos; with grant option;</span><br><span class="line">c. 刷新权限: flush privileges;­</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> MySQL </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 指令 </tag>
            
            <tag> 安装 </tag>
            
            <tag> 启动 </tag>
            
            <tag> 查看 </tag>
            
            <tag> 修改 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客搭建]]></title>
      <url>/2019/02/21/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h3 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">使用hexo搭建个人博客前需要先在自己的电脑上装好git和node.js   </span><br><span class="line">首先在自己的电脑上创建一个空的文件夹&apos;Hexo&apos;  </span><br><span class="line">在gitbash中终端中通过 cd 指令进入到刚才创建的文件夹中   </span><br><span class="line">输入指令 npm install -g hexo 安装Hexo  </span><br><span class="line">输入指令 hexo init 进行初始化  </span><br><span class="line">依次输入指令 npm install、hexo server 启动服务器  </span><br><span class="line">博客内容发生改变后可以通过 hexo clean、hexo generate、hexo deploy、hexo server 刷新后重新启动</span><br></pre></td></tr></table></figure>
<h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 在github上创建一个空的仓库，仓库名：用户名.github.io  </span><br><span class="line">2. 修改博客本地仓库中的配置文件（Hexo目录下的_config.yml文件）,在文件末尾添加一下选中内容</span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: &lt;url仓库地址&gt;</span><br><span class="line">    branch: master</span><br><span class="line">3. 使用git部署, 输入指令 npm install hexo-deployer-git --save  </span><br><span class="line">4. 依次输入指令 hexo clean、hexo generate、hexo deploy 对博客进行提交</span><br></pre></td></tr></table></figure>
<h3 id="更新博客"><a href="#更新博客" class="headerlink" title="更新博客"></a>更新博客</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">依次输入指令 hexo clean、hexo generate、hexo deploy 对博客进行提交</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 搭建 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 更新 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git常用指令]]></title>
      <url>/2019/02/21/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h3 id="git常用指令"><a href="#git常用指令" class="headerlink" title="git常用指令"></a>git常用指令</h3><h4 id="1-基本指令"><a href="#1-基本指令" class="headerlink" title="1.基本指令"></a>1.基本指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git init                            -- 新建git仓库      </span><br><span class="line">git add 文件/文件夹                  -- 将文件添加到缓存区中  </span><br><span class="line">git add -A                          -- 添加所有内容到缓存区中</span><br><span class="line">git stutas                          -- 查看git状态  </span><br><span class="line">git commit -m  ‘提交信息’            -- 将缓存区中的内容全部提交到git本地仓库中  </span><br><span class="line">git log                             -- 查看提交日志  </span><br><span class="line">git reset -- hard HEAD              -- 让工作目录中的内容和仓库中的内容保持一致  </span><br><span class="line">git reset --hard HEAD^              -- 回到上一个版本  </span><br><span class="line">git reset -- hard 版本号             -- 回到指定的版本  </span><br><span class="line">git checkout -- 文件名               -- 从暂存区中恢复工作目录中的内容</span><br><span class="line">                                       (让工作区中的指定文件，回到上次提交的时候的状态) </span><br><span class="line">git clone &lt;url&gt;                      -- 将服务器上的项目(仓库)克隆</span><br><span class="line">                                       (使用https地址需要输入密码，使用ssh地址需要添加公钥)  </span><br><span class="line">git remote add origin 地址           -- 关联远程仓库(只需要关联一次)</span><br><span class="line">git push [-u] origin master          -- 提交(-u在第一次提交分之的时候才用)</span><br></pre></td></tr></table></figure>
<h4 id="2-分之管理"><a href="#2-分之管理" class="headerlink" title="2.分之管理"></a>2.分之管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">创建仓库会默认给我们创建一个master分之,这个分之一般作为提交和发布分之;</span><br><span class="line">开发一般会自己创建一个develop分之，用来开发和测试;</span><br><span class="line">多人协作的时候还可能根据不同的人或者(不同的功能)创建不同的分之，用来独立开发。  </span><br><span class="line">常见分之： master(主要是合并develop), develop(主要合并下面的其他分支), 功能/人员分之(开发)  </span><br><span class="line">git branch [-a]                       -- 查看分之   </span><br><span class="line">git branch 分之名                     -- 创建分之   </span><br><span class="line">git checkout 分支名		      -- 切换分之      </span><br><span class="line">git checkout -b 分之名                -- 切换并创建新的分之   </span><br><span class="line">git diff 分之1 分之2	              -- 查看两个分之之间的差异  </span><br><span class="line">git merge 分之名		              -- 让当前分之和指定分之进行合并     </span><br><span class="line">注意: 切换分之、push、pull，这些操作前要保证工作区是clean  </span><br><span class="line">怎么避免冲突：不要发生多个分之对同一个文件在同一个版本下进行修改(和同伴确认和商量)</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Git </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 指令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title></title>
      <url>/2019/02/21/HTTP%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<h1 id="HTTP基本原理"><a href="#HTTP基本原理" class="headerlink" title="HTTP基本原理"></a>HTTP基本原理</h1><p>URI(Uniform Resource Identifier): 统一资源标志符</p>
<p>URL(Universal Resource Locator): 统一资源定位符</p>
<p>URN(Universal Resource Name): 统一资源名称</p>
<p>Proxy-Connection<br>    当使⽤代理服务器的时候，这个就指明了代理服务器是否使⽤⻓链接。但是，数据在从client 到代理服务器，和从代理服务器到被请求的服务器之间如果存在信息差异的话，会造成信息请求不到，但是在⼤多数情况下，都还是能够成⽴的。</p>
<p>Pragma<br>    防⽌⻚⾯被缓存, 和 cache-control类似的⼀个字段，⼀般爬⾍都写成 no-cache。</p>
<p>Cookie<br>    同样是⼀个⽐较关键的字段，Cookie是 client 请求 服务器时，服务器会返回⼀个键值对样的数据给浏览器，下⼀次浏览器再访问这个域名下的⽹⻚时，就需要携带这些键值对数据在Cookie中，⽤来跟踪浏览器⽤户的访问前后路径。<br>    在爬⾍时，根据前次访问得到 cookie数据，然后添加到下⼀次的访问请求头中。<br>Host<br>    访问的服务器主机名，⽐如百度的 <a href="http://www.baidu.com。这个值在爬⾍时可以从" target="_blank" rel="noopener">www.baidu.com。这个值在爬⾍时可以从</a> 访问的 URI 中获得。<br>If-Modified-Since<br>    只有当所请求的内容在指定的⽇期之后⼜经过修改才返回它，否则返回304。其⽬的是为了提⾼访问效率。但是在爬⾍时，不设置这个值，⽽在增量爬取时才设置⼀个这样的值，⽤以更新信息。<br>Authorization<br>    当客户端接收到来⾃WEB服务器的 WWW-Authenticate 响应时，该头部来回应⾃⼰的身份验证信息给WEB服务器主要是授权验证确定符合服务器的要求这个在爬⾍时按需</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2019/02/21/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
